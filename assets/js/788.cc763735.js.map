{"version":3,"file":"assets/js/788.cc763735.js","mappings":"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","sources":["webpack://itp-front/./src/components/QuestionHubQuestionDetail.vue","webpack://itp-front/src/components/QuestionHubQuestionDetail.vue","webpack://itp-front/./src/components/QuestionHubQuestionDetail.vue?73e2","webpack://itp-front/./src/components/QuestionHubQuestionDetail.vue?624f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"QuestionDetailPage\"}},[_c('Header',{staticClass:\"upload-question-header\"}),_c('div',{staticClass:\"main-content\"},[_c('BannerForUploadQuestion',{attrs:{\"backgroundImage\":require('@/assets/image/MyQuestionBannerBackground.png'),\"title\":\"Question Detail\",\"subtitle\":\"See the details and comments for this question\"}}),_c('div',{staticClass:\"back-button-container\"},[_c('div',{staticClass:\"back-button\",on:{\"click\":_vm.goBack}},[_c('svg',{staticClass:\"feather feather-arrow-left\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"24\",\"height\":\"24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"stroke-width\":\"2\",\"stroke-linecap\":\"round\",\"stroke-linejoin\":\"round\"}},[_c('line',{attrs:{\"x1\":\"19\",\"y1\":\"12\",\"x2\":\"5\",\"y2\":\"12\"}}),_c('polyline',{attrs:{\"points\":\"12 19 5 12 12 5\"}})]),_c('span',[_vm._v(\"Back to Questions\")])])]),_c('div',{staticClass:\"question-detail-container\"},[_c('div',{staticClass:\"question-detail\"},[_c('h3',{staticClass:\"specific-question\"},[_vm._v(\"Question: \"+_vm._s(_vm.questionTitle))]),_c('div',{staticClass:\"comments-section\"},[_c('h4',[_vm._v(\"Discussion: \")]),_c('ul',_vm._l((_vm.comments),function(comment){return _c('li',{key:comment.id,staticClass:\"comment-item\"},[_c('div',{staticClass:\"comment-content\"},[_c('span',{staticClass:\"username\"},[_vm._v(_vm._s(comment.userName))]),_vm._v(\": \"+_vm._s(comment.comment)+\" \")]),_c('div',{staticClass:\"comment-rating\"},[_c('el-rate',{attrs:{\"disabled\":\"\"},model:{value:(comment.personalRating),callback:function ($$v) {_vm.$set(comment, \"personalRating\", $$v)},expression:\"comment.personalRating\"}})],1)])}),0)])])])],1),_c('MainFooter')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"QuestionDetailPage\">\n    <Header class=\"upload-question-header\"></Header>\n\n    <div class=\"main-content\">\n      <BannerForUploadQuestion \n        :backgroundImage=\"require('@/assets/image/MyQuestionBannerBackground.png')\" \n        title=\"Question Detail\" \n        subtitle=\"See the details and comments for this question\" />\n\n      <div class=\"back-button-container\">\n        <div class=\"back-button\" @click=\"goBack\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-left\">\n            <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\n            <polyline points=\"12 19 5 12 12 5\"></polyline>\n          </svg>\n          <span>Back to Questions</span>\n        </div>\n      </div>\n\n      <div class=\"question-detail-container\">\n        <div class=\"question-detail\">\n          <h3 class=\"specific-question\">Question: {{ questionTitle }}</h3>\n          <div class=\"comments-section\">\n            <h4>Discussion: </h4>\n            <ul>\n              <li v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\n                <div class=\"comment-content\">\n                  <span class=\"username\">{{ comment.userName }}</span>: {{ comment.comment }}\n                </div>\n                <div class=\"comment-rating\">\n                  <el-rate v-model=\"comment.personalRating\" disabled></el-rate> <!-- 显示评分 -->\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <MainFooter></MainFooter>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Header from \"../components/NavigationBar.vue\";\nimport BannerForUploadQuestion from \"../components/UploadQuestionBanner.vue\";\nimport MainFooter from \"../components/MainFooter.vue\";\n\nexport default {\n  data() {\n    return {\n      questionTitle: '',  // 存储问题标题\n      comments: []  // 存储评论及用户名\n    };\n  },\n  created() {\n    this.fetchQuestionDetails();\n    this.fetchComments();  // 获取评论及用户名\n  },\n  components: {\n    Header,\n    BannerForUploadQuestion,\n    MainFooter\n  },\n  methods: {\n    // 获取问题详情\n    async fetchQuestionDetails() {\n      try {\n        const response = await axios.get(`https://4106d498-ed1a-41dc-85cc-c733a827f038.mock.pstmn.io/community/${this.$route.params.id}`);\n        if (response.data.code === 1) {\n          this.questionTitle = response.data.data.question;\n        } else {\n          alert('Failed to fetch question details.');\n        }\n      } catch (error) {\n        console.error('Error fetching question details:', error);\n      }\n    },\n    // 获取问题的评论并为每个评论获取用户名\n    async fetchComments() {\n      try {\n        const response = await axios.get(`https://4106d498-ed1a-41dc-85cc-c733a827f038.mock.pstmn.io/community/comment?questionId=${this.$route.params.id}`);\n        if (response.data.code === 1) {\n          const comments = response.data.data;\n\n          // 使用 map 创建 Promise 数组以获取每个评论的用户名\n          const promises = comments.map(async (comment) => {\n            // 使用 comment.userId 发起获取用户名的请求\n            const userResponse = await axios.get(`https://4106d498-ed1a-41dc-85cc-c733a827f038.mock.pstmn.io/users?userId=${comment.userId}`, { cache: 'no-store' });\n            //console.log(JSON.stringify(userResponse.data, null, 2))\n            //console.log('User response code:', userResponse.data.code);\n            if (userResponse.data.code === 1) {\n              comment.userName = userResponse.data.data.name;  // 添加用户名到评论中\n            } else {\n              comment.userName = 'Unknown';  // 若未找到用户，设为 'Unknown'\n            }\n            return comment;  // 返回带有用户名的评论\n          });\n\n          // 等待所有 Promise 完成并更新 comments 数组\n          this.comments = await Promise.all(promises);\n        } else {\n          alert('Failed to fetch comments.');\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    },\n    goBack() {\n      this.$router.push('/myquestion');  // 返回问题列表页面\n    }\n  }\n};\n</script>\n\n\n\n  \n  <style scoped>\n  .username {\n  font-weight: 600; /* 加粗 */\n  font-size: 1.2em;  /* 字体变大 */\n}\n\n  .main-content {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .back-button-container {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  \n  .back-button {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: 16px;\n    color: #949696;\n    transition: color 0.3s ease;\n    width: 80%; /* Same width as .question-detail */\n    padding: 10px 0;\n    box-sizing: border-box;\n  }\n  \n  .back-button:hover {\n    color: #000000;\n  }\n  \n  .back-button svg {\n    margin-right: 8px; /* Spacing between icon and text */\n    fill: none;\n    stroke: currentColor; /* Inherit current text color */\n  }\n  \n  .question-detail-container {\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n    margin-top: 20px;\n    margin-bottom: 60px;\n  }\n  \n  .question-detail {\n    width: 80%; /* Control width of question details and comments */\n    padding: 20px;\n    background-color: #fff;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n  }\n  \n  .comments-section {\n    margin-top: 40px;\n    padding: 20px; /* Add padding inside for spacing */\n    border: 1px solid #ddd; /* Light gray border */\n    border-radius: 8px; /* Match border-radius with .question-detail */\n    background-color: #f8f8f8; /* Light background color for comments section */\n  }\n  \n  .comments-section ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  \n  .comments-section li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    padding: 10px;\n    background-color: #fff;\n    border-radius: 5px;\n  }\n  \n  .comment-rating {\n    margin-left: 20px; /* Space between comment content and rating */\n  }\n  \n  .specific-question {\n    margin-left: 10px;\n  }\n\n  .comment-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 5px;\n}\n.comment-content {\n  max-width: 85%; /* 限制评论内容的最大宽度 */\n  word-wrap: break-word; /* 如果内容过长，自动换行 */\n  overflow-wrap: break-word; /* 确保长单词换行 */\n}\n  </style>\n  ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QuestionHubQuestionDetail.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QuestionHubQuestionDetail.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./QuestionHubQuestionDetail.vue?vue&type=template&id=b259c356&scoped=true\"\nimport script from \"./QuestionHubQuestionDetail.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionHubQuestionDetail.vue?vue&type=script&lang=js\"\nimport style0 from \"./QuestionHubQuestionDetail.vue?vue&type=style&index=0&id=b259c356&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b259c356\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","staticClass","require","on","goBack","_v","_s","questionTitle","_l","comments","comment","key","id","userName","model","value","personalRating","callback","$$v","$set","expression","staticRenderFns","data","created","fetchQuestionDetails","fetchComments","components","Header","BannerForUploadQuestion","MainFooter","methods","response","axios","get","$route","params","code","question","alert","error","console","promises","map","userResponse","userId","cache","name","Promise","all","$router","push","component"],"sourceRoot":""}